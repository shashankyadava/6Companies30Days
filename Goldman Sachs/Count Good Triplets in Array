#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
  
#define ordered_set tree<int, null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update>

class Solution {
public:
    long long goodTriplets(vector<int>& nums1, vector<int>& nums2) {
        map<int,int>mp;
        for(int i = 0; i<nums2.size(); i++){
            mp[nums2[i]] = i;
        }
        ordered_set s1,s2;
        int pref[nums1.size()],suff[nums1.size()];
        for(int i = 0; i<nums1.size(); i++){
            pref[i] = s1.order_of_key(mp[nums1[i]]);
            s1.insert(mp[nums1[i]]);
        }
        for(int i = nums1.size()-1; i>=0; i--){
            suff[i] = s2.order_of_key(-mp[nums1[i]]);
            s2.insert(-mp[nums1[i]]);
        }
        long long int ans = 0;
        for(int i = 0; i<nums1.size(); i++){
            ans+=(long long int)((long long int)pref[i]*(long long int)suff[i]);
        }
        return ans;
    }
};
