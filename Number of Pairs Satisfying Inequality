#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
typedef tree<int, null_type, less_equal<int>, rb_tree_tag,tree_order_statistics_node_update> ordered_set;
class Solution {
public:
    long long numberOfPairs(vector<int>& nums1, vector<int>& nums2, int diff) {
        // order_of_key: The number of items in a set that are strictly smaller than k
        // find_by_order: It returns an iterator to the ith largest element
        long long int maxx = 0;
        for(int i = 0; i<nums1.size(); i++){
            nums1[i]-=nums2[i];
            nums2[i] = nums1[i]+diff;
        }
        ordered_set st;
        st.insert(nums1[0]);
        for(int i = 1; i<nums1.size(); i++){
            maxx+=st.order_of_key(nums2[i]+1);
            st.insert(nums1[i]);
        }
        return maxx;
    }
};
