class Solution {
public:
    bool canFinish(int n, vector<vector<int>>& p) {
        int nn = p.size();
        int deg[n];
        memset(deg,0,sizeof(deg));
        vector<int>g[n];
        for(int i = 0; i<nn; i++){
            int x = p[i][0];
            int y = p[i][1];
            g[y].push_back(x);
            deg[x]++;
        }
        queue<int>q;
        for(int i = 0; i<n; i++){
            if(deg[i]==0){
                q.push(i);
            }
        }
        while(!q.empty()){
            int parent = q.front();
            q.pop();
            for(auto child: g[parent]){
                deg[child]--;
                if(deg[child]==0){
                    q.push(child);
                }
            }
        }
        for(int i = 0; i<n; i++){
            if(deg[i]>0)return false;
        }
        return true;
        
    }
};
